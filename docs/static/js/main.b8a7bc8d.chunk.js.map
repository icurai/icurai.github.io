{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/gebruikersonderzoek.jsx","components/about.jsx","components/footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","bg","zIndex","position","top","data","paragraph","Gebruikersonderzoek","src","alt","target","About","Why","map","d","i","Footer","width","App","SmoothScroll","speed","speedAsDuration","useState","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8a7bc8d.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            icurai\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#about' className='page-scroll'>\n                icurai\n              </a>\n            </li>\n            <li>\n              <a href='#gebruikersonderzoek' className='page-scroll'>\n                Gebruikersonderzoek\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import ParticlesBg from \"particles-bg\";\n\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <ParticlesBg type=\"circle\" bg={{zIndex: 0, position:\"absolute\", top:0}} />\n        <div className='overlay'>\n          <div className='container'>\n          \n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h2>{props.data ? props.data.paragraph : 'Loading'}</h2>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Gebruikersonderzoek = (props) => {\n    return (\n        <div id='gebruikersonderzoek'>\n            <div className='container'>\n\n                <div className='row'>\n                    <div className='col-xs-12'>\n                    <h1>\n                        <img src={'/img/icurai-logo.jpg'} alt=\"Logo\"/>\n                    </h1>\n                    </div>\n                </div>\n                <br/><br/>\n                <div className='row'>\n                    <div className='col-xs-12'>\n\n                        <div className='gebruikersonderzoek-text'>\n                            <h3>{props.data ? props.data.paragraph : 'Loading'}</h3>\n                            <a\n                                href='https://forms.gle/QNUHEu5MVAoJ8nCf9'\n                                target={'_blank'}\n                                className='btn btn-custom btn-lg page-scroll'\n                            >\n                                Ik doe mee\n                            </a>{' '}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","export const About = (props) => {\n  return (\n    <div id='about'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-xs-12'>\n            <div className='about-text'>\n              <h2>icurai</h2>\n              <p>{props.data ? props.data.paragraph : 'loading...'}</p>\n              <h3>Waarom icurai?</h3>\n              <div className='list-style'>\n                <div className='col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Footer = (props) => {\n\n    return (\n        <div>\n            <div id='footer'>\n                <div className='container text-center'>\n\n                    <div className='row'>\n                        <div className='col-xs-12 col-md-6'>\n                            <h3>Met de steun van</h3>\n                        </div>\n                        <div className='col-xs-12 col-md-6'>\n                            {' '}\n                            <img src='/img/BHIC_Logo_Horizontal_Color.webp' className='img-responsive' alt=''\n                                 width={400}/>{' '}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation'\nimport { Header } from './components/header'\nimport { Gebruikersonderzoek } from './components/gebruikersonderzoek'\nimport { About } from './components/about'\nimport { Footer } from './components/footer'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n  }, [])\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Gebruikersonderzoek data={landingPageData.Gebruikersonderzoek} />\n      <About data={landingPageData.About} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}